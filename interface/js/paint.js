// Generated by CoffeeScript 1.7.1
(function() {
  var base_url;

  base_url = "http://localhost:5000/";

  window.pp_opts = {
    outline: true
  };

  window.onload = function() {
    var canvas, curr_zoom, hitOptions, isDragging, paper, prevDragPosition;
    hitOptions = {
      segments: true,
      stroke: true,
      curves: true,
      handles: true,
      fill: true,
      tolerance: 10
    };
    paper = window.paper;
    canvas = document.getElementById('canvas');
    paper.setup(canvas);
    window.mainCanvas = paper.projects[0];
    api.populatePaper();
    mainCanvas.activate();
    paper.view.draw();
    segmentation_tool.activate();
    curr_zoom = 1;
    isDragging = false;
    prevDragPosition = [0, 0];
    $('#canvas').on('mousedown', function(event) {
      if (event.which !== 3) {
        return;
      }
      mainCanvas.activate();
      return $(window).on('mousemove', function() {
        prevDragPosition = [event.pageX, event.pageY];
        isDragging = true;
        return $(window).off('mousemove');
      });
    });
    $('#canvas').on('mouseup', function() {
      var wasDragging;
      mainCanvas.activate();
      wasDragging = isDragging;
      isDragging = false;
      return $(window).off("mousemove");
    });
    $('#canvas').on('mousemove', function(event) {
      var delta;
      if (isDragging) {
        mainCanvas.activate();
        delta = [event.pageX - prevDragPosition[0], event.pageY - prevDragPosition[1]];
        prevDragPosition = [event.pageX, event.pageY];
        return paper.view.center = paper.view.center.subtract(new paper.Point(delta));
      }
    });
    $('#canvas').on('mousewheel', function(event) {
      var a, beta, d, p, pc, zoom_factor;
      mainCanvas.activate();
      if (event.altKey) {
        return paper.view.center = paper.view.center.add(new paper.Point(event.deltaX * 10, event.deltaY * 10));
      } else {
        d = event.deltaY;
        zoom_factor = 1;
        if (d > 0) {
          zoom_factor = Math.pow(0.8, d);
        } else {
          zoom_factor = Math.pow(1.2, Math.abs(d));
        }
        beta = 1 / zoom_factor;
        curr_zoom = curr_zoom * zoom_factor;
        p = new paper.Point(event.pageX, -event.pageY);
        p.multiply(zoom_factor);
        pc = p.subtract(paper.view.center);
        a = p.subtract(pc.multiply(beta)).subtract(paper.view.center);
        paper.view.zoom = curr_zoom;
        return paper.view.center = paper.view.center.add(a);
      }
    });
    $('#resegment').click(function() {
      return segmentation_tool.activate();
    });
    $('#fill').click(function() {
      fill_select_tool.activate();
      return $('#fill_options').show();
    });
    $('#connections').click(function() {
      return modify_connections_tool.activate();
    });
    $('#shape_transitions').click(function() {
      console.log("activating the shape transition tool");
      return shape_transition_curve_tool.activate();
    });
    window.changeOutline = function() {
      var el, _i, _j, _len, _len1, _ref, _ref1;
      if (window.pp_opts.outline) {
        _ref = paper.project.getItems({
          "class": paper.Path
        });
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          el = _ref[_i];
          el.strokeWidth = 1;
        }
      } else {
        _ref1 = paper.project.getItems({
          "class": paper.Path
        });
        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
          el = _ref1[_j];
          el.strokeWidth = el.origStrokeWidth;
        }
      }
      return paper.view.update();
    };
    window.changeDispConn = function() {
      var c, _i, _j, _k, _l, _len, _len1, _len2, _len3, _len4, _len5, _m, _n, _ref, _ref1, _ref2;
      if (window.pp_opts.show_conn === 0) {
        for (_i = 0, _len = all_connections.length; _i < _len; _i++) {
          c = all_connections[_i];
          c.visible = false;
        }
        _ref = window.simple_all_connections;
        for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
          c = _ref[_j];
          c.visible = false;
        }
      } else if (window.pp_opts.show_conn === 1) {
        for (_k = 0, _len2 = all_connections.length; _k < _len2; _k++) {
          c = all_connections[_k];
          c.visible = true;
        }
        _ref1 = window.simple_all_connections;
        for (_l = 0, _len3 = _ref1.length; _l < _len3; _l++) {
          c = _ref1[_l];
          c.visible = false;
        }
      } else if (window.pp_opts.show_conn === 2) {
        _ref2 = window.simple_all_connections;
        for (_m = 0, _len4 = _ref2.length; _m < _len4; _m++) {
          c = _ref2[_m];
          c.visible = true;
        }
        for (_n = 0, _len5 = all_connections.length; _n < _len5; _n++) {
          c = all_connections[_n];
          c.visible = false;
        }
      }
      return paper.view.update;
    };
    $('#outline').on('change', function() {
      if ($(this).is(':checked')) {
        window.pp_opts.outline = true;
        return changeOutline();
      }
    });
    $('#real').on('change', function() {
      if ($(this).is(':checked')) {
        window.pp_opts.outline = false;
        return changeOutline();
      }
    });
    $('#hide_conn').on('change', function() {
      if ($(this).is(':checked')) {
        window.pp_opts.show_conn = 0;
        return changeDispConn();
      }
    });
    $('#show_conn').on('change', function() {
      if ($(this).is(':checked')) {
        window.pp_opts.show_conn = 1;
        return changeDispConn();
      }
    });
    return $('#simple_conn').on('change', function() {
      if ($(this).is(':checked')) {
        window.pp_opts.show_conn = 2;
        return changeDispConn();
      }
    });
  };

}).call(this);
