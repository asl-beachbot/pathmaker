// Generated by CoffeeScript 1.7.1
(function() {
  var curr_seg, handle, handle2, hitOptions, node, tool;

  window.shape_transition_curve_tool = new paper.Tool();

  tool = shape_transition_curve_tool;

  handle = handle2 = node = null;

  hitOptions = {
    segments: true,
    stroke: true,
    handles: true,
    tolerance: 20
  };

  curr_seg = null;

  $(document).ready(function() {
    return $('#simplify_transition').click(function() {
      var p;
      console.log("simplifying path");
      if (curr_seg) {
        p = curr_seg.path;
        return p.simplify();
      }
    });
  });

  tool.onMouseDown = function(event) {
    var c, hitResult, location, segment, _i, _len, _ref;
    console.log(event);
    if (event.event.button !== 0) {
      return;
    }
    node = handle = handle2 = null;
    _ref = window.all_connections;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      c = _ref[_i];
      hitResult = c.hitTest(event.point, hitOptions);
      if (hitResult) {
        break;
      }
    }
    paper.project.deselectAll();
    if (hitResult) {
      console.log(hitResult);
      curr_seg = hitResult.segment;
      if (hitResult.type === 'handle-in') {
        handle2 = hitResult.segment.handleOut;
        handle = hitResult.segment.handleIn;
        hitResult.segment.selected = true;
      } else if (hitResult.type === 'handle-out') {
        handle2 = hitResult.segment.handleIn;
        handle = hitResult.segment.handleOut;
        hitResult.segment.selected = true;
      } else if (hitResult.type === 'segment') {
        node = hitResult.segment.point;
        hitResult.segment.selected = true;
      } else if ((hitResult.type === 'stroke') && event.event.ctrlKey) {
        location = hitResult.location;
        segment = hitResult.item.insert(location.index + 1, event.point);
        hitResult.item.smooth();
      } else if (hitResult.type === 'stroke') {
        hitResult.item.selected = true;
      }
    }
    return true;
  };

  tool.onMouseDrag = function(event) {
    var c_p, l_2, v_norm;
    console.log(event);
    console.log(node);
    if (event.event.button !== 0) {
      return;
    }
    if (handle) {
      handle.x += event.delta.x;
      handle.y += event.delta.y;
      c_p = curr_seg.point;
      v_norm = handle;
      v_norm = v_norm.divide(v_norm.length);
      l_2 = handle2.length;
      handle2.x = (v_norm.multiply(-1).multiply(l_2)).x;
      handle2.y = (v_norm.multiply(-1).multiply(l_2)).y;
      paper.view.update();
    } else if (node) {
      node.x += event.delta.x;
      node.y += event.delta.y;
      paper.view.update();
    }
    return true;
  };

}).call(this);
